#!/bin/bash

VENDOR=`lscpu | grep "Vendor ID" | awk {'print $3'}`
PROCESSOR=`lscpu | grep "Vendor ID" | awk {'print $3'} | awk -F'Genuine|Authentic' {'print $2'}`
PLATFORM_VENDOR=`dmidecode -t 1 | grep Manufacturer | awk {'print $2'} | sed 's/,$//g'`
PLATFORM_MODEL=`dmidecode -t 1 | grep Product | awk '{ print $4 }'`
BIOS_VERSION=`dmidecode -t 0 | grep Version | awk '{print $2}'`
KERNEL_VERSION=`uname -a | awk '{print $3}'`
SOCKET_COUNT=`lscpu | grep Socket | awk '{ print $2}'`
SERIAL_NUMBER=`dmidecode -t 1 | grep Serial | awk '{ print $3 }'`
OS=`hostnamectl | grep Operating | awk {'print $3'}`
TEST_PROFILE={{ test_profile }}

# Get Memory Counts
MEMORY_COUNT_MB=`dmidecode -t 17 | grep "Size.*MB" | awk '{s+=$2} END {print s}'`
MEMORY_COUNT_GB=`dmidecode -t 17 | grep "Size.*GB" | awk '{s+=$2} END {print s}'`
if [ ! -z ${MEMORY_COUNT_MB} ]; then
  MEMORY_COUNT=${MEMORY_COUNT_MB}
  MEMORY_SIZE="M"
else
  MEMORY_COUNT=${MEMORY_COUNT_GB}
  MEMORY_SIZE="G"
fi

if [ $VENDOR == "GenuineIntel" ] ; then
  MODEL=`lscpu | grep "Model name" | awk {'print $6'} | sed 's/-/_/g'`
elif [ $VENDOR == "AuthenticAMD" ]; then
  MODEL=`lscpu | grep "Model name" | awk {'print $5'}`
fi

if [[ ${PLATFORM_VENDOR} == "VMware" ]]; then
  IDENTIFIER=`echo ${PLATFORM_VENDOR}-${PLATFORM_MODEL}-${PROCESSOR}-${SOCKET_COUNT}X${MODEL}-${MEMORY_COUNT}${MEMORY_SIZE}-${OS} | tr '[:upper:]' '[:lower:]'`
else
  IDENTIFIER=`echo ${PLATFORM_VENDOR}-${PLATFORM_MODEL}-${PROCESSOR}-${SOCKET_COUNT}X${MODEL}-${MEMORY_COUNT}${MEMORY_SIZE}-${OS}-${SERIAL_NUMBER} | tr '[:upper:]' '[:lower:]'`
fi

export TEST_RESULTS_IDENTIFIER="${IDENTIFIER}"
export TEST_RESULTS_NAME="${IDENTIFIER}"
export TEST_RESULTS_DESCRIPTION="${IDENTIFIER} on BIOS version ${BIOS_VERSION} running ${OS} with Kernel ${KERNEL_VERSION} started at {{ ansible_date_time.iso8601 }}"

echo
echo Automated Benchmarking Tooling
echo System Identified as ${TEST_RESULTS_IDENTIFIER}
echo

# removing any existing runs
rm -rf /var/lib/phoronix-test-suite/test-results/${TEST_RESULTS_IDENTIFIER}

# start benchmark runs
echo Starting benchmarks...
phoronix-test-suite make-download-cache
phoronix-test-suite batch-install ${TEST_PROFILE}
phoronix-test-suite batch-benchmark ${TEST_PROFILE}

# upload results
echo Uploading results...
phoronix-test-suite phoromatic.upload-result ${TEST_RESULTS_IDENTIFIER}

# spin down node
# shutdown -h now
